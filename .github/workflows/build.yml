name: build

on:
  push:
    branches:
      - "main"
  
env:
  TEST_TAG: ${{ secrets.DOCKERHUB_USERNAME }}/dtt-frontend:test
  LATEST_TAG: ${{ secrets.DOCKERHUB_USERNAME }}/dtt-frontend:latest

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Context for Buildx
        id: buildx-context
        run: |
          docker context create builders
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest
          endpoint: builders
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.TEST_TAG }}
  deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create kube config
        run: |
          mkdir -p $HOME/.kube/
          echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
      - name: Install helm
        run: |
          curl -LO https://get.helm.sh/helm-v3.8.0-linux-amd64.tar.gz
          tar -zxvf helm-v3.8.0-linux-amd64.tar.gz
          sudo mv linux-amd64/helm /usr/local/bin/helm
          helm version
      - name: Lint helm charts
        run: helm lint ./charts/
      - name: Deploy
        run: |
          helm upgrade --install --atomic --timeout 2m \
            dtt-frontend ./charts/ -f ./charts/values.yaml \
            --namespace dtt-dev --create-namespace \
            --set image.tag=${{ env.TEST_TAG }}

      # - name: 'Deploy'
      #   uses: 'deliverybot/helm@master'
      #   with:
      #     secrets: '${{ toJSON(secrets) }}'
      #     chart: 'charts/dtt-frontend'
      #     namespace: dtt-dev
      #     release: dtt-frontend
      #     value-files: './values.yaml'
      #   env:
      #     KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'